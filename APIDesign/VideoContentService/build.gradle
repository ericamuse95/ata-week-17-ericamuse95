plugins {
    id 'ata-curriculum.snippets-conventions'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/KenzieAcademy-SoftwareEngineering/kenzie-java-test-infrastructure")
        credentials {
            username = "kenzie-gradle"
            password = "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"
        }
    }
}

dependencies {
    testImplementation 'com.kenzie:testinfrastructure:1.0.0'
    implementation 'org.springframework.boot:spring-boot-starter:2.6.6'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.6'
    implementation 'org.springframework.data:spring-data-jpa:2.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.6'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.3'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
}

checkstyle {
    def suppressionFile = rootProject.file('Utilities/ATACheckstyle/configuration/checkstyle/unit1/suppressions.xml')
    configProperties.put('checkstyle.suppression.filter', suppressionFile)
}

def wflowToTestsMap = [
        'apidesign-videocontentservice-test': [
                'com.kenzie.videocontentservice.ShowControllerTest'
        ]
]

wflowToTestsMap.forEach { wflowName, testList ->
    tasks.register(wflowName) {
        dependsOn wflowtest
        test.doFirst {
            filter {
                testList.each { includeTestsMatching it }
            }
        }
    }
}

task bootRunDev {
    bootRun.configure {
        systemProperty "spring.profiles.active", 'local'
    }
}

bootRunDev.finalizedBy bootRun
